// Generated by inkscape 1.0.2 (394de47547, 2021-03-26) + inkscape-paths2openscad 0.27
// Sat May 15 21:48:06 2021 from "cable_path_svg.svg"

// Module names are of the form poly_<inkscape-path-id>().  As a result,
// you can associate a polygon in this OpenSCAD program with the corresponding
// SVG element in the Inkscape document by looking for the XML element with
// the attribute id="inkscape-path-id".

// fudge value is used to ensure that subtracted solids are a tad taller
// in the z dimension than the polygon being subtracted from.  This helps
// keep the resulting .stl file manifold.
fudge = 0.1;
user_unit_scale_x = 1.0;
user_unit_scale_y = 1.0;
custom_scale_x = 1;
custom_scale_y = 1;
zsize = 5;
line_fn = 8;
min_line_width = 0.20000000298023224;
line_width_scale = 1.0;
function min_line_mm(w) = max(min_line_width, w * line_width_scale) * 1;


rect5579_0_center = [0.000000,0.000000];
rect5579_0_points = [[-145.000000,-150.000000],[145.000000,-150.000000],[145.000000,150.000000],[-145.000000,150.000000],[-145.000000,-150.000000]];
module poly_rect5579(h, w, s, res=line_fn)
{
  scale([custom_scale_x, -custom_scale_y, 1]) union()
  {
    translate (rect5579_0_center) linear_extrude(height=h, convexity=10, scale=0.01*s)
      translate (-rect5579_0_center) polygon(rect5579_0_points);
  }
}

cablePathFront_0_center = [-59.500527,68.995320];
cablePathFront_0_points = [[-56.305871,123.193530],[-56.392101,110.096780],[-56.388525,108.084985],[-56.434420,105.922474],[-56.614721,103.642701],[-57.014362,101.279115],[-57.322976,100.076346],[-57.718276,98.865169],[-58.210878,97.649764],[-58.811398,96.434313],[-59.530455,95.222998],[-60.378663,94.020000],[-61.366641,92.829500],[-62.505005,91.655680],[-64.395804,89.741023],[-66.296353,87.599563],[-68.155037,85.273097],[-69.920242,82.803419],[-71.540355,80.232323],[-72.963762,77.601605],[-74.138849,74.953059],[-74.617143,73.635161],[-75.014002,72.328480],[-75.658086,69.492806],[-76.144376,66.366558],[-76.495038,62.978396],[-76.732237,59.356979],[-76.878141,55.530967],[-76.954914,51.529020],[-76.989733,43.111960],[-77.001053,27.909810],[-76.964570,26.459907],[-76.854381,25.076883],[-76.669377,23.764418],[-76.408451,22.526189],[-76.070493,21.365877],[-75.654395,20.287160],[-75.159047,19.293717],[-74.583342,18.389228],[-73.926171,17.577370],[-73.186425,16.861824],[-72.362996,16.246269],[-71.454774,15.734382],[-70.460652,15.329844],[-69.379520,15.036333],[-68.210270,14.857529],[-66.951793,14.797110],[-42.000000,14.823710]];
module poly_cablePathFront(h, w, s, res=line_fn)
{
  scale([custom_scale_x, -custom_scale_y, 1]) union()
  {
    for (t = [0: len(cablePathFront_0_points)-2]) {
      hull() {
        translate(cablePathFront_0_points[t]) 
          cylinder(h=h, r=w/2, $fn=res);
        translate(cablePathFront_0_points[t + 1]) 
          cylinder(h=h, r=w/2, $fn=res);
      }
    }
  }
}

cableProfile_0_center = [-56.000001,131.500000];
cableProfile_0_points = [[-58.000001,134.000000],[-58.000001,129.000000],[-57.959509,128.595945],[-57.843313,128.220063],[-57.415501,127.584500],[-56.779939,127.156687],[-56.404056,127.040492],[-56.000001,127.000000],[-55.595946,127.040492],[-55.220063,127.156687],[-54.584501,127.584500],[-54.156689,128.220063],[-54.040493,128.595945],[-54.000001,129.000000],[-54.000001,134.000000],[-54.040493,134.404055],[-54.156689,134.779937],[-54.584501,135.415500],[-55.220063,135.843313],[-55.595946,135.959508],[-56.000001,136.000000],[-56.404056,135.959508],[-56.779939,135.843313],[-57.415501,135.415500],[-57.843313,134.779937],[-57.959509,134.404055],[-58.000001,134.000000],[-58.000001,134.000000]];
module poly_cableProfile(h, w, s, res=line_fn)
{
  scale([custom_scale_x, -custom_scale_y, 1]) union()
  {
    translate (cableProfile_0_center) linear_extrude(height=h, convexity=10, scale=0.01*s)
      translate (-cableProfile_0_center) polygon(cableProfile_0_points);
  }
}

cablePathSide_0_center = [63.750010,31.000000];
cablePathSide_0_points = [[60.000000,140.000000],[60.138360,86.921770],[60.199281,83.467833],[60.372676,80.545805],[60.644490,78.075894],[61.000671,75.978306],[61.427165,74.173249],[61.909919,72.580930],[62.987990,69.715330],[64.323138,66.636213],[65.069395,64.844765],[65.797955,62.839241],[66.456202,60.585027],[66.991522,58.047509],[67.351299,55.192075],[67.482920,51.984110],[67.500020,-78.000001]];
module poly_cablePathSide(h, w, s, res=line_fn)
{
  scale([custom_scale_x, -custom_scale_y, 1]) union()
  {
    for (t = [0: len(cablePathSide_0_points)-2]) {
      hull() {
        translate(cablePathSide_0_points[t]) 
          cylinder(h=h, r=w/2, $fn=res);
        translate(cablePathSide_0_points[t + 1]) 
          cylinder(h=h, r=w/2, $fn=res);
      }
    }
  }
}

module cable_path_svg(h)
{
  difference()
  {
    union()
    {
      translate ([0,0,0]) poly_rect5579(h, min_line_mm(0.1), 100.0);
      translate ([0,0,0]) poly_cablePathFront(h, min_line_mm(4.0), 100.0);
      translate ([0,0,0]) poly_cableProfile(h, min_line_mm(4.0), 100.0);
      translate ([0,0,0]) poly_cablePathSide(h, min_line_mm(9.0), 100.0);
    }
    union()
    {
    }
  }
}

//cable_path_svg(zsize);
